@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        <li class="nav-item">
            @Html.ActionLink("Administrar Productos", "Index", "ProductosMVC", null, new { @class = "nav-link text-dark" })
        </li>
        <li class="nav-item">
            @Html.ActionLink("Administrar Ventas", "Index", "VentasMVC",null, new { @class = "nav-link text-dark" })
        </li>
        <li class="nav-item">
            @Html.ActionLink("Clientes que deben", "Index", "MorososMVC",null, new { @class = "nav-link text-dark"})
        </li>

        <li class="nav-item">
            <a class="nav-link text-dark" style="color:darkgreen" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @User.Identity.Name!</a>
        </li>
        <li class="nav-item">
            <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button type="submit" class="nav-link btn btn-link" style="color:darkgreen">Cerrar Sesion</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Iniciar Sesion</a>
        </li>
    }
</ul>
